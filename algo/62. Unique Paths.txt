A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?

Input: m = 3, n = 2
Output: 3
Explanation:
From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:
1. Right -> Right -> Down
2. Right -> Down -> Right
3. Down -> Right -> Right


其实就是最简单的动态规划

这个做法比较慢，比较合理的是另外用一个m*n的矩阵把东西保存起来

public int uniquePaths(int m, int n) {
        System.out.printf("input: %d,%d\n ",m,n);
        if (m==1 && n==1){
            return 1;
        }
        if (m==1){
            return 1;
        }
        if (n==1){
            return 1;
        }
        return uniquePaths(m-1,n) + uniquePaths(m,n-1);
    }